name: grimoirelab-release

on:
  workflow_dispatch:
    inputs:
      release_candidate:
        description: "Create a release candidate version"
        required: true
        type: boolean
        default: false
      git_email:
        description: "Git email for commits messages"
        required: true
        default: "sduenas@bitergia.com"
      git_name:
        description: "Git name for commits messages"
        required: true
        default: "Santiago Due√±as"

jobs:
  variables-job:
    name: Set variables
    runs-on: ubuntu-latest
    outputs:
      git_email: ${{ steps.variables.outputs.git_email }}
      git_name: ${{ steps.variables.outputs.git_name }}
      release_candidate: ${{ steps.variables.outputs.release_candidate }}
    steps:
      - id: variables
        name: variables
        run: |
          echo "::set-output name=git_email::${{ inputs.git_email }}"
          echo "::set-output name=git_name::${{ inputs.git_name}}"
          echo "::set-output name=release_candidate::${{ inputs.release_candidate}}"

  grimoirelab-toolkit:
    name: grimoirelab-toolkit
    needs:
      - variables-job
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'grimoirelab-toolkit'
      module_repository: 'chaoss/grimoirelab-toolkit'
      module_directory: 'src/grimoirelab-toolkit'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-kidash:
    name: Kidash
    needs:
      - variables-job
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'kidash'
      module_repository: 'chaoss/grimoirelab-kidash'
      module_directory: 'src/grimoirelab-kidash'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-sortinghat:
    name: Sortinghat
    needs:
      - variables-job
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'sortinghat'
      module_repository: 'chaoss/grimoirelab-sortinghat'
      module_directory: 'src/grimoirelab-sortinghat'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-cereslib:
    name: Cereslib
    needs:
      - variables-job
      - grimoirelab-toolkit
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'cereslib'
      module_repository: 'chaoss/grimoirelab-cereslib'
      module_directory: 'src/grimoirelab-cereslib'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-sigils:
    name: Sigils
    needs:
      - variables-job
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'grimoirelab-panels'
      module_repository: 'chaoss/grimoirelab-sigils'
      module_directory: 'src/grimoirelab-sigils'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-perceval:
    name: Perceval
    needs:
      - variables-job
      - grimoirelab-toolkit
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'perceval'
      module_repository: 'chaoss/grimoirelab-perceval'
      module_directory: 'src/grimoirelab-perceval'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-perceval-mozilla:
    name: Perceval Mozilla
    needs:
      - variables-job
      - grimoirelab-toolkit
      - grimoirelab-perceval
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'perceval-mozilla'
      module_repository: 'chaoss/grimoirelab-perceval-mozilla'
      module_directory: 'src/grimoirelab-perceval-mozilla'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-perceval-opnfv:
    name: Perceval OPNFV
    needs:
      - variables-job
      - grimoirelab-toolkit
      - grimoirelab-perceval
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'perceval-opnfv'
      module_repository: 'chaoss/grimoirelab-perceval-opnfv'
      module_directory: 'src/grimoirelab-perceval-opnfv'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-perceval-puppet:
    name: Perceval Puppet
    needs:
      - variables-job
      - grimoirelab-toolkit
      - grimoirelab-perceval
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'perceval-puppet'
      module_repository: 'chaoss/grimoirelab-perceval-puppet'
      module_directory: 'src/grimoirelab-perceval-puppet'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-perceval-weblate:
    name: Perceval Weblate
    needs:
      - variables-job
      - grimoirelab-toolkit
      - grimoirelab-perceval
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'perceval-weblate'
      module_repository: 'chaoss/grimoirelab-perceval-weblate'
      module_directory: 'src/grimoirelab-perceval-weblate'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-kingarthur:
    name: Kingarthur
    needs:
      - variables-job
      - grimoirelab-toolkit
      - grimoirelab-perceval
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'kingarthur'
      module_repository: 'chaoss/grimoirelab-kingarthur'
      module_directory: 'src/grimoirelab-kingarthur'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-graal:
    name: Graal
    needs:
      - variables-job
      - grimoirelab-toolkit
      - grimoirelab-perceval
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'graal'
      module_repository: 'chaoss/grimoirelab-graal'
      module_directory: 'src/grimoirelab-graal'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-elk:
    name: GrimoireELK
    needs:
      - variables-job
      - grimoirelab-toolkit
      - grimoirelab-cereslib
      - grimoirelab-perceval
      - grimoirelab-perceval-mozilla
      - grimoirelab-perceval-opnfv
      - grimoirelab-perceval-puppet
      - grimoirelab-perceval-weblate
      - grimoirelab-graal
      - grimoirelab-sortinghat
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'grimoire-elk'
      module_repository: 'chaoss/grimoirelab-elk'
      module_directory: 'src/grimoirelab-elk'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab-sirmordred:
    name: Sirmordred
    needs:
      - variables-job
      - grimoirelab-toolkit
      - grimoirelab-sortinghat
      - grimoirelab-elk
      - grimoirelab-kidash
      - grimoirelab-sigils
      - grimoirelab-perceval
      - grimoirelab-perceval-mozilla
      - grimoirelab-perceval-opnfv
      - grimoirelab-perceval-puppet
      - grimoirelab-perceval-weblate
      - grimoirelab-graal
      - grimoirelab-cereslib
    uses: ./.github/workflows/release-grimoirelab-component.yml
    with:
      git_email: ${{ needs.variables-job.outputs.git_email }}
      git_name: ${{ needs.variables-job.outputs.git_name }}
      release_candidate: ${{ needs.variables-job.outputs.release_candidate }}
      module_name: 'sirmordred'
      module_repository: 'chaoss/grimoirelab-sirmordred'
      module_directory: 'src/grimoirelab-sirmordred'
    secrets:
      access_token: ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}

  grimoirelab:
    name: Grimoirelab
    runs-on: ubuntu-latest
    needs:
      - variables-job
      - grimoirelab-toolkit
      - grimoirelab-kidash
      - grimoirelab-sortinghat
      - grimoirelab-cereslib
      - grimoirelab-sigils
      - grimoirelab-perceval
      - grimoirelab-perceval-mozilla
      - grimoirelab-perceval-opnfv
      - grimoirelab-perceval-puppet
      - grimoirelab-perceval-weblate
      - grimoirelab-kingarthur
      - grimoirelab-graal
      - grimoirelab-elk
      - grimoirelab-sirmordred
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Set up Git config
        run: |
          git config --global user.email "${{ inputs.git_email }}"
          git config --global user.name "${{ inputs.git_name }}"

      - name: Configure repository credentials
        run: |
          git remote set-url origin https://${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}@github.com/chaoss/grimoirelab.git

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.poetry/bin:$PATH" >> $GITHUB_ENV
        shell: bash

      - name: Install release-tools
        #TODO: Change to the latest version once the new release is created
        run: pip install git+https://github.com/Bitergia/release-tools.git#egg=release-tools

      - id: semverup
        name: Update version number
        run: |
          # Check what version to update: patch, minor or major
          BUMP_MAJOR=4
          BUMP_MINOR=2
          if [ ${{ inputs.release_candidate }} == 'true' ]
          then
            rcArg='--pre-release'
          else
            rcArg=''
          fi
          versionUpdated=$((
          ${{ needs.grimoirelab-toolkit.outputs.changed_version }} |
          ${{ needs.grimoirelab-perceval.outputs.changed_version }} |
          ${{ needs.grimoirelab-perceval-mozilla.outputs.changed_version }} |
          ${{ needs.grimoirelab-perceval-opnfv.outputs.changed_version }} |
          ${{ needs.grimoirelab-perceval-puppet.outputs.changed_version }} |
          ${{ needs.grimoirelab-perceval-weblate.outputs.changed_version }} |
          ${{ needs.grimoirelab-kingarthur.outputs.changed_version }} |
          ${{ needs.grimoirelab-elk.outputs.changed_version }} |
          ${{ needs.grimoirelab-sortinghat.outputs.changed_version }} |
          ${{ needs.grimoirelab-kidash.outputs.changed_version }} |
          ${{ needs.grimoirelab-sigils.outputs.changed_version }} |
          ${{ needs.grimoirelab-sirmordred.outputs.changed_version }} |
          ${{ needs.grimoirelab-cereslib.outputs.changed_version }} |
          ${{ needs.grimoirelab-graal.outputs.changed_version }}))

          if [ $((versionUpdated & $BUMP_MAJOR )) -ne 0 ]
          then
            version=$(semverup --bump-version=major $rcArg)
          elif [ $((versionUpdated & $BUMP_MINOR )) -ne 0 ]
          then
            version=$(semverup --bump-version=minor $rcArg)
          else
            version=$(semverup --bump-version=patch $rcArg)
          fi
          echo $version
          git add pyproject.toml grimoirelab/_version.py
          echo "::set-output name=version::$version"

      - name: Update dependencies files
        run: |
          poetry add --lock --allow-prereleases \
              ${{ needs.grimoirelab-toolkit.outputs.package_version }} \
              ${{ needs.grimoirelab-kidash.outputs.package_version }} \
              ${{ needs.grimoirelab-sortinghat.outputs.package_version }} \
              ${{ needs.grimoirelab-cereslib.outputs.package_version }} \
              ${{ needs.grimoirelab-sigils.outputs.package_version }} \
              ${{ needs.grimoirelab-perceval.outputs.package_version }} \
              ${{ needs.grimoirelab-perceval-mozilla.outputs.package_version }} \
              ${{ needs.grimoirelab-perceval-opnfv.outputs.package_version }} \
              ${{ needs.grimoirelab-perceval-puppet.outputs.package_version }} \
              ${{ needs.grimoirelab-perceval-weblate.outputs.package_version }} \
              ${{ needs.grimoirelab-kingarthur.outputs.package_version }} \
              ${{ needs.grimoirelab-graal.outputs.package_version }} \
              ${{ needs.grimoirelab-elk.outputs.package_version }} \
              ${{ needs.grimoirelab-sirmordred.outputs.package_version }}

          cat << EOF > requirements.txt
          grimoirelab=${{ steps.semverup.outputs.version }}
          grimoirelab-toolkit==${{ needs.grimoirelab-toolkit.outputs.version }}
          perceval==${{ needs.grimoirelab-perceval.outputs.version }}
          perceval-mozilla==${{ needs.grimoirelab-perceval-mozilla.outputs.version }}
          perceval-opnfv==${{ needs.grimoirelab-perceval-opnfv.outputs.version }}
          perceval-puppet==${{ needs.grimoirelab-perceval-puppet.outputs.version }}
          perceval-weblate==${{ needs.grimoirelab-perceval-weblate.outputs.version }}
          kingarthur==${{ needs.grimoirelab-kingarthur.outputs.version }}
          grimoire-elk==${{ needs.grimoirelab-elk.outputs.version }}
          sortinghat==${{ needs.grimoirelab-sortinghat.outputs.version }}
          kidash==${{ needs.grimoirelab-kidash.outputs.version }}
          grimoirelab-panels==${{ needs.grimoirelab-sigils.outputs.version }}
          sirmordred==${{ needs.grimoirelab-sirmordred.outputs.version }}
          cereslib==${{ needs.grimoirelab-cereslib.outputs.version }}
          graal==${{ needs.grimoirelab-graal.outputs.version }}
          EOF

          cat requirements.txt

          git add pyproject.toml
          git add poetry.lock
          git add requirements.txt

      - name: Generate release notes from packages
        env:
          grimoirelab_toolkit_notes: "${{ needs.grimoirelab-toolkit.outputs.notes}}"
          grimoirelab_kidash_notes: "${{ needs.grimoirelab-kidash.outputs.notes}}"
          grimoirelab_sortinghat_notes: "${{ needs.grimoirelab-sortinghat.outputs.notes}}"
          grimoirelab_cereslib_notes: "${{ needs.grimoirelab-cereslib.outputs.notes}}"
          grimoirelab_sigils_notes: "${{ needs.grimoirelab-sigils.outputs.notes}}"
          grimoirelab_perceval_notes: "${{ needs.grimoirelab-perceval.outputs.notes}}"
          grimoirelab_perceval_mozilla_notes: "${{ needs.grimoirelab-perceval-mozilla.outputs.notes}}"
          grimoirelab_perceval_opnfv_notes: "${{ needs.grimoirelab-perceval-opnfv.outputs.notes}}"
          grimoirelab_perceval_puppet_notes: "${{ needs.grimoirelab-perceval-puppet.outputs.notes}}"
          grimoirelab_perceval_weblate_notes: "${{ needs.grimoirelab-perceval-weblate.outputs.notes}}"
          grimoirelab_kingarthur_notes: "${{ needs.grimoirelab-kingarthur.outputs.notes}}"
          grimoirelab_graal_notes: "${{ needs.grimoirelab-graal.outputs.notes}}"
          grimoirelab_elk_notes: "${{ needs.grimoirelab-elk.outputs.notes}}"
          grimoirelab_sirmordred_notes: "${{ needs.grimoirelab-sirmordred.outputs.notes}}"
        run: |
          version=${{ steps.semverup.outputs.version }}
          release_file=releases/$version.md
          touch $release_file
          cat << EOF > $release_file
          # GrimoireLab $version
          The following list describes the changes by component:

          $grimoirelab_toolkit_notes
          $grimoirelab_kidash_notes
          $grimoirelab_sortinghat_notes
          $grimoirelab_cereslib_notes
          $grimoirelab_sigils_notes
          $grimoirelab_perceval_notes
          $grimoirelab_perceval_mozilla_notes
          $grimoirelab_perceval_opnfv_notes
          $grimoirelab_perceval_puppet_notes
          $grimoirelab_perceval_weblate_notes
          $grimoirelab_kingarthur_notes
          $grimoirelab_graal_notes
          $grimoirelab_elk_notes
          $grimoirelab_sirmordred_notes
          EOF

          cat $release_file

      - id: current_time
        name: Store current time to get the release workflow
        if: steps.semverup.outcome == 'success'
        run: |
          datetime=$(date +"%Y-%m-%dT%H:%M:%S%z")
          echo "::set-output name=datetime::$datetime"
          echo $datetime

      - id: publish
        name: Publish new version.
        if: steps.semverup.outcome == 'success'
        run: |
          if [ ${{ inputs.release_candidate }} == 'true' ]
          then
            publish ${{ steps.semverup.outputs.version }} "${{ inputs.git_name }} <${{ inputs.git_email }}>" --push origin --no-cleanup
          else
            publish ${{ steps.semverup.outputs.version }} "${{ inputs.git_name }} <${{ inputs.git_email }}>" --push origin
          fi

      - id: wait-for-release
        name: Wait for release to finish.
        if: steps.publish.outcome == 'success'
        run: |
          url="https://api.github.com/repos/chaoss/grimoirelab/actions/workflows/release.yml/runs?created=>${{ steps.current_time.outputs.datetime }}"
          while true
          do
            workflows=$(curl -sS -H "Authorization: token ${{ secrets.GRIMOIRELAB_BUILD_TOKEN }}" $url)
            if [ $(echo $workflows | jq '.total_count') -eq 0 ]
            then
              echo "Release workflow did not start"
              sleep 60
              continue
            fi

            release_conclusion=$(echo $workflows | jq '.workflow_runs[0].conclusion')
            release_status=$(echo $workflows | jq '.workflow_runs[0].status')
            if [ $release_status = \"completed\" -a $release_conclusion = \"success\" ]
            then
              echo "Release completed!";
              break;
            elif [ $release_status = \"completed\" -a $release_conclusion != \"success\" ]
            then
              echo "Release failed!";
              exit 1;
            else
              echo $release_conclusion $release_status
              echo "Waiting for release..."
              sleep 60
            fi
          done

      - id: rollback
        name: Rollback last commits and remove tag
        if: steps.wait-for-release.outcome == 'failure'
        run: |
          git reset --hard HEAD~1
          git push -f origin master
          git tag -d ${{ steps.version.outputs.version }}
          git push --delete origin ${{ steps.version.outputs.version }}

          # Force to fail
          exit 1
        working-directory: ${{ inputs.module_directory }}
